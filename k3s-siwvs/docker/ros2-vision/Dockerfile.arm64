FROM siwvs/ros2-base:latest

# Install additional dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-${ROS_DISTRO}-cv-bridge \
    ros-${ROS_DISTRO}-image-transport \
    ros-${ROS_DISTRO}-vision-msgs \
    python3-opencv \
    python3-yaml \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    && rm -rf /var/lib/apt/lists/*

# Install TensorFlow for Jetson
RUN pip3 install --no-cache-dir \
    numpy \
    protobuf \
    grpcio \
    absl-py \
    tensorboard \
    setuptools \
    wheel

# Install JetPack-specific TensorFlow
RUN wget -O /tmp/tensorflow-2.8.0+nv22.3-cp38-cp38-linux_aarch64.whl \
    https://developer.download.nvidia.com/compute/redist/jp/v50/tensorflow/tensorflow-2.8.0+nv22.3-cp38-cp38-linux_aarch64.whl && \
    pip3 install --no-cache-dir /tmp/tensorflow-2.8.0+nv22.3-cp38-cp38-linux_aarch64.whl && \
    rm /tmp/tensorflow-2.8.0+nv22.3-cp38-cp38-linux_aarch64.whl

# Copy the ROS 2 packages
COPY ./ros2/siwvs_msgs /ros2_ws/src/siwvs_msgs/
COPY ./ros2/siwvs_vision /ros2_ws/src/siwvs_vision/

# Build the packages
RUN cd /ros2_ws && \
    . /opt/ros/${ROS_DISTRO}/setup.sh && \
    colcon build --symlink-install --packages-select siwvs_msgs siwvs_vision

# Create config and model directories
RUN mkdir -p /config /models

# Set environment variables
ENV ROS_DOMAIN_ID=42 \
    RMW_IMPLEMENTATION=rmw_cyclonedds_cpp

# Default command: Run the camera node
CMD ["/bin/bash", "-c", "source /opt/ros/${ROS_DISTRO}/setup.bash && source /ros2_ws/install/setup.bash && ros2 run siwvs_vision camera_node.py --ros-args -p model_path:=/models/product_detection.pb -p label_path:=/models/product_labels.txt"]
